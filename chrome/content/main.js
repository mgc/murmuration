/*
 * Copyright 2009 by POTI Inc.
 *
 * This file is part of Murmuration.
 *
 * Murmuration is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 3 of the License, or (at your
 * option) any later version.
 *
 * Murmuration is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Loaded in to the main Songbird window.  Does nothing at the moment.
// This code was generated by the developer tools extension wizard.

Components.utils.import('resource://xmpp4moz/xmpp.jsm');
Components.utils.import('resource://murmuration/main.jsm');

// Make a namespace.
if (typeof Murmuration == 'undefined') {
  var Murmuration = {};
}

if (typeof(MRMR_NS) == "undefined")
	var MRMR_NS = "http://skunk.grommit.com/data/1.0#murmuration";

Murmuration.addComment = function(event) {
	var comment = event.target.value;
	var user = event.target.getAttributeNS(MRMR_NS, "user");
	var noticeId = event.target.getAttributeNS(MRMR_NS, "noticeId");
	var message = "@" + user + " " + comment + " #rid" + noticeId;
	dump(message + "\n");
	XMPP.send(murmuration.account.address,
		<message to="murmuration@skunk.grommit.com"><body>{message}</body></message>); 
	document.getElementById("murmuration-comment-panel").hidePopup();
}

Murmuration.thumbsUp = function(event) {
	var textbox = document.getElementById("new-comment");
	var comment = textbox.value;
	var user = textbox.getAttributeNS(MRMR_NS, "user");
	var noticeId = textbox.getAttributeNS(MRMR_NS, "noticeId");
	var message = "@" + user + " " + comment + " #thumbsup #rid" + noticeId;
	dump(message + "\n");
	XMPP.send(murmuration.account.address,
		<message to="murmuration@skunk.grommit.com"><body>{message}</body></message>); 
	document.getElementById("murmuration-comment-panel").hidePopup();
}

Murmuration.thumbsDown = function(event) {
	var textbox = document.getElementById("new-comment");
	var comment = textbox.value;
	var user = textbox.getAttributeNS(MRMR_NS, "user");
	var noticeId = textbox.getAttributeNS(MRMR_NS, "noticeId");
	var message = "@" + user + " " + comment + " #thumbsdown #rid" + noticeId;
	dump(message + "\n");
	XMPP.send(murmuration.account.address,
		<message to="murmuration@skunk.grommit.com"><body>{message}</body></message>); 
	document.getElementById("murmuration-comment-panel").hidePopup();
}

/**
 * UI controller that is loaded into the main player window
 */
Murmuration.Controller = {
	onLoad: function() {
		// initialization code
		this._initialized = true;
		this._strings = document.getElementById("murmuration-strings");
    
		// Perform extra actions the first time the extension is run
		if (Application.prefs.get("extensions.murmuration.firstrun").value) {
		  Application.prefs.setValue("extensions.murmuration.firstrun", false);
		  this._firstRunSetup();
		}
	},
  
	onUnLoad: function() {
		this._initialized = false;
	},
  
	_firstRunSetup : function() {
	}
};

window.addEventListener("load", function(e) { Murmuration.Controller.onLoad(e); }, false);
window.addEventListener("unload", function(e) { Murmuration.Controller.onUnLoad(e); }, false);
